function Planet(a) {
    var b = new THREE.SphereGeometry(a.radius / DEFAULT_SCALE, 32, 32),
        c = new THREE.MeshPhongMaterial({
            map: THREE.ImageUtils.loadTexture("img/planisphere/" + a.name + "map.jpg"),
            bumpMap: THREE.ImageUtils.loadTexture("img/planisphere/" + a.name + "bump.jpg"),
            bumpScale: .05
        }),
        d = new THREE.Mesh(b, c);
    return d.userData.data = a, d.userData.angle = a.speed, d
}

function Star() {
    var a = new THREE.SphereGeometry(695700 / DEFAULT_SUN_SCALE, 32, 32),
        b = THREE.ImageUtils.loadTexture("img/planisphere/sunmap.jpg"),
        c = new THREE.MeshBasicMaterial({
            map: b,
            bumpMap: b,
            bumpScale: .05
        }),
        d = new THREE.Mesh(a, c);
    return d
}

function StarField() {
    var a = THREE.ImageUtils.loadTexture("img/galaxy_starfield.png"),
        b = new THREE.MeshBasicMaterial({
            map: a,
            side: THREE.BackSide
        }),
        c = new THREE.SphereGeometry(1e4, 32, 32),
        d = new THREE.Mesh(c, b);
    return d
}

function handleWindowResize() {
    HEIGHT = window.innerHeight - footer.height() - 10, main.height(HEIGHT), WIDTH = main.width(), renderer.setSize(WIDTH, HEIGHT), camera.aspect = WIDTH / HEIGHT, camera.updateProjectionMatrix()
}

function updatePlanetsAnimation() {
    planets.forEach(function(a) {
        var b = Math.cos(a.userData.angle / parameters.speed);
        a.userData.angle += a.userData.data.speed;
        var c = Math.cos(a.userData.angle / parameters.speed) * a.userData.data.aphelion / parameters.distance,
            d = Math.sin(a.userData.angle / parameters.speed) * a.userData.data.perihelion / parameters.distance,
            e = Math.cos(a.userData.angle / parameters.speed) * a.userData.data.inclination * 10;
        if (a.position.x = c, a.position.z = d, a.position.y = e, a.scale.x = parameters.scale, a.scale.y = parameters.scale, a.scale.z = parameters.scale, "forward" == a.userData.data.way ? a.rotation.y += a.userData.data.period / parameters.rotation : "retrograde" == a.userData.data.way && (a.rotation.y -= a.userData.data.period / parameters.rotation), a.userData.data.name == currentPlanet) {
            $("#distance-monitor").html(distanceSunToPlanet(sun, a)), $("#radius-monitor").html(addCommas(parameters.scale * Math.round(a.userData.data.radius)));
            var f = Math.cos(a.userData.angle / parameters.speed);
            change = f < 0 && b > 0, change && (date.setUTCFullYear(date.getFullYear() + 1), $("#date-monitor").html(date.getFullYear()))
        }
    })
}

function distanceSunToPlanet(a, b) {
    var c = a.position.x - b.position.x,
        d = a.position.y - b.position.y,
        e = a.position.z - b.position.z;
    return addCommas(Math.round(486710 * Math.sqrt(c * c + d * d + e * e)))
}

function addCommas(a) {
    a += "", x = a.split("."), x1 = x[0], x2 = x.length > 1 ? "." + x[1] : "";
    for (var b = /(\d+)(\d{3})/; b.test(x1);) x1 = x1.replace(b, "$1,$2");
    return x1 + x2
}

function Camera() {
    return camera = new THREE.PerspectiveCamera(50, WIDTH / HEIGHT, 1, 1e6), camera.position.set(0, 2, 400), camera.lookAt(new THREE.Vector3), camera
}

function addPlanets() {
    $.getJSON( "data/planets.json", function( data ) {
        var items = [];
        $.each( data.planets, function( i, planet ) {
            var c = Planet(planet);
            planets.push(c), targetList.push(c), scene.add(c), console.log("Added planet " + planet.name + " on the scene")
        });
      });
}

function init() {
    renderer.setSize(WIDTH, HEIGHT);
    var a = document.getElementById("world");
    a.appendChild(renderer.domElement), renderer.shadowMapEnabled = !0, camera = Camera(), addPlanets();
    var b = StarField();
    scene.add(b), sun = Star(), scene.add(sun), targetList.push(sun), scene.add(new THREE.PointLight(16777215, 2, 5e5)), controls = new THREE.OrbitControls(camera, renderer.domElement), projector = new THREE.Projector, $("#date-monitor").html(date.getFullYear())
}

function loop() {
    pause || (sun.rotation.y += .001, updatePlanetsAnimation()), controls.update(), renderer.render(scene, camera), requestAnimationFrame(loop)
}
var renderer = new THREE.WebGLRenderer({
        antialias: !0
    }),
    scene = new THREE.Scene,
    planets = [],
    camera, controls, planets_names = ["mercury", "venus", "earth", "mars", "jupiter", "saturn", "uranus", "neptune", "pluto"],
    DEFAULT_DISTANCE = 5e5,
    DEFAULT_SPEED = 1e5,
    DEFAULT_ROTATION = 10,
    DEFAULT_SCALE = 5e3,
    DEFAULT_SUN_SCALE = 2 * DEFAULT_SCALE,
    parameters = {
        distance: DEFAULT_DISTANCE,
        speed: DEFAULT_SPEED,
        rotation: DEFAULT_ROTATION,
        scale: 1,
        sunscale: DEFAULT_SUN_SCALE
    },
    main = $("#main"),
    footer = $("#footer"),
    HEIGHT = window.innerHeight - footer.height() - 10;
main.height(HEIGHT);
var WIDTH = main.width(),
    targetList = [],
    sun, projector, mouse = {
        x: 0,
        y: 0
    },
    date = new Date,
    change = !1,
    previousCos = 1,
    currentPlanet = "earth";
window.addEventListener("resize", handleWindowResize, !1);
var pause = !1;
$(document).ready(function() {
    init(), loop(), $(".slider").slider({
        reversed: !0
    }), $(".slider").on("slide", function(a) {
        var b = this.id;
        parameters[b] = a.value
    }), planets_names.forEach(function(a) {
        $("#menu").append('<img src="img/btn/' + a + '.jpg" class="img-responsive btn-planet" width="26" alt="' + a + '"  data-toggle="tooltip" data-placement="top" title="' + a + '"/>')
    }), $("#pause").on("click", function() {
        pause ? (pause = !1, loop(), $(this).html('<span class="glyphicon glyphicon-pause"></span>')) : (pause = !0, $(this).html('<span class="glyphicon glyphicon-play"></span>'))
    }), $('[data-toggle="tooltip"]').tooltip(), $("#system-article").draggable().resizable(), $("#monitor-article").draggable().resizable(), $(".btn-system-article").click(function() {
        $("#system-article").toggle()
    }), $(".btn-monitor-article").click(function() {
        $("#monitor-article").toggle()
    }), $(".btn-planet").click(function() {
        currentPlanet = $(this).attr("alt");
        var a = currentPlanet.substring(0, 1),
            b = currentPlanet.substring(1);
        $("#planet-name-monitor").html(a.toUpperCase() + b)
    })
});